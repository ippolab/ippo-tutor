{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/httpclient.service.ts","webpack:///./src/app/student.ts","webpack:///./src/app/user-form/user-form.component.css","webpack:///./src/app/user-form/user-form.component.html","webpack:///./src/app/user-form/user-form.component.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n\\n<app-user-form></app-user-form>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'auth';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { UserFormComponent } from './user-form/user-form.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n/*\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n \nimport { User } from './user';\nimport { Observable } from 'rxjs';\nimport { Student } from './student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpclientService {\n\n  sendAuthForm(username:string, password:string) : Observable<User>{\n    return this.http.post<User>('servername/api/users/login/', {'username': username, 'password': password})\n  }\n\n  getStudent(user:User):Observable<Student>{\n    return this.http.get<Student>('servername/api/students/studentname/');\n  }\n\n  constructor(\n    private http: HttpClient) { }\n    \n}\n*/","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport {User} from './user'\nimport { Observable } from 'rxjs';\nimport { Student } from './student';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpclientService {\n\n  constructor(\n    private http: HttpClient) { }\n\n  sendAuthForm(username:string, password:string) : Observable<User>{\n    return this.http.post<User>('servername/api/users/login/', {'username': username, 'password': password})\n  }\n\n  getStudent():Observable<Student>{\n    return this.http.get<Student>('servername/api/students/studentname/');\n  }\n\n}\n","export class Student {\n    first_name: string;\n    last_name: string;\n    second_name: string;\n    username: string;\n    \n    constructor(first_name: string, last_name: string, second_name: string, username: string){\n        this.first_name = first_name;\n        this.last_name = last_name;\n        this.second_name = second_name;\n        this.username = username;\n    }\n}\n","module.exports = \"/* CSS style*/\\r\\n\\r\\n.card-body {\\r\\n    border: 15px solid white;\\r\\n    border-radius: 10px;\\r\\n    background: white;\\r\\n    padding-top: 300px;\\r\\n}\\r\\n\\r\\n.col-lg {\\r\\n    padding-top: 150px;\\r\\n\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n/* Media requests */\\r\\n\\r\\n@media (min-width: 516px) {\\r\\n\\r\\n    .card-body {\\r\\n        width: 300px;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n@media (max-width: 515px) {\\r\\n    .card-body {\\r\\n        width: 300px;\\r\\n\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n@media (min-width: 300px) {\\r\\n    .card-body {\\r\\n        width: 300px;\\r\\n        margin: 0;\\r\\n        padding: 0;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n@media (min-width: 1200px) {\\r\\n    /* Default settings*/\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n\\n        </div>\\n        <div class=\\\"col-sm\\\" style=\\\"align-items: center\\\">\\n            <div class=\\\"card-body\\\" style=\\\"height: 250px; width: 300px; \\\">\\n                <label>Логин</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Шифр Студенческого\\\" [(ngModel)]=\\\"myUser.username\\\">\\n                <label>Пароль</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Шифр Студенческого\\\" [(ngModel)]=\\\"password\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\" id=\\\"log_btn\\\" (click)=\\\"onClickMe()\\\">Вход</button>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm\\\" style=\\\"height: 10px;\\\">\\n\\n        </div>\\n    </div>\\n\\n    <div style=\\\"text-align: center;\\\">\\n    <h1>{{clickMessage}}</h1>\\n    <h1>{{succesfulMessage}}</h1>\\n    </div>\\n\\n\\n\\n\\n<!--\\n<h1>User auth form</h1>\\n\\n<h2>{{myUser.name}} Details</h2>\\n\\n<div class=\\\"container\\\">\\n    <h1>Hero Form</h1>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"myUser.username\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"alterEgo\\\">Alter Ego</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"alterEgo\\\" [(ngModel)]=\\\"myUser.password\\\">\\n      </div>\\n\\n      <button (click)=\\\"onClickMe(myUser.username)\\\" >help</button>\\n</div>\\n\\n\\n\\n<h1>{{myUser.username}}</h1>\\n<h1>{{myUser.password}}</h1>\\n<h1>{{myUser.istutor}}</h1>\\n<h1>{{clickMessage}}</h1>\\n-->\"","import { Component, OnInit } from '@angular/core';\n\n\nimport { User } from '../user';\nimport {HttpclientService} from '../httpclient.service'\nimport { Observable } from '../../../node_modules/rxjs';\nimport { Student } from '../student';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css'],\n  providers:[HttpclientService]\n})\n\nexport class UserFormComponent implements OnInit {\n\n  myUser = new User(\"\", \"\", false);\n  myStudent = new Student('win', '', '', '');\n\n  password = '';\n  clickMessage = '';\n\n  onClickMe(name : string, password : string) {\n    this.clientService.sendAuthForm(name, password).subscribe(data => this.myUser=data);\n    if(this.myUser.istutor == false) this.clientService.getStudent().subscribe(data => this.myStudent=data)\n    //todo else getTutor\n    this.success();\n  }\n\n  success(){\n    this.clickMessage = this.myStudent.first_name;\n  }\n\n  fail(){\n    this.clickMessage = 'you are my hlebushek';\n  }\n    \n \n\n  constructor(private clientService: HttpclientService){}\n\n  ngOnInit() {\n  }\n\n}","export class User {\n    \n    constructor (\n        public username : string,\n        public password : string,\n        public istutor : boolean,\n    ){}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}